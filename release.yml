name: Build and Release Anime List

on:
  schedule:
    # Runs daily at 08:00 UTC. You can adjust the time as needed.
    - cron: '0 8 * * *'
  workflow_dispatch: # Allows manual triggering from the Actions tab

permissions:
  contents: write # Required to create releases and commit

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run script to generate JSON
        run: python sanime/main.py

      - name: Check if file was generated
        id: check_file
        run: |
          if [ -f anime_tvdb_ids.json ]; then
            echo "file_exists=true" >> $GITHUB_OUTPUT
          else
            echo "file_exists=false" >> $GITHUB_OUTPUT
            echo "JSON file not found. Exiting."
            exit 1
          fi

      - name: Calculate new SHA256 hash
        id: hash_new
        run: echo "sha256=$(sha256sum anime_tvdb_ids.json | cut -d' ' -f1)" >> $GITHUB_OUTPUT

      - name: Get SHA256 from latest release
        id: hash_old
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Fetches the body of the latest release and extracts the SHA256 hash.
          # If no release is found or no hash is in the body, it defaults to "none".
          LATEST_RELEASE_BODY=$(gh release view --json body -q .body || echo "")
          OLD_SHA=$(echo "$LATEST_RELEASE_BODY" | grep -oP 'SHA256: \K[a-f0-9]{64}' || echo "none")
          echo "sha256=$OLD_SHA" >> $GITHUB_OUTPUT

      - name: Compare hashes
        id: compare
        run: |
          echo "New hash: ${{ steps.hash_new.outputs.sha256 }}"
          echo "Old hash: ${{ steps.hash_old.outputs.sha256 }}"
          if [ "${{ steps.hash_new.outputs.sha256 }}" == "${{ steps.hash_old.outputs.sha256 }}" ]; then
            echo "Hashes are the same. No new release needed."
          else
            echo "Hashes are different. Creating a new release."
            TAG_NAME=$(date +'%Y-%m-%d-%H%M%S')
            gh release create "$TAG_NAME" \
              --title "Anime List Update $TAG_NAME" \
              --notes "SHA256: ${{ steps.hash_new.outputs.sha256 }}" \
              "anime_tvdb_ids.json"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}